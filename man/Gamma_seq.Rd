% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Gamma_seq.R
\name{Gamma_seq}
\alias{Gamma_seq}
\title{The sequence of sensitivity values under the loosen precondition that only parts of the biases are bounded.}
\usage{
Gamma_seq(y, z, mset, inner = 0, trim = 3, thres, Ks, tol = 1e-04)
}
\arguments{
\item{y}{A vector of responses with no missing data.}

\item{z}{Treatment indicator, z=1 for treated, z=0 for control with length(z)==length(y).}

\item{mset}{Matched set indicator, 1, 2, ..., sum(z) with length(mset)==length(y). Matched set indicators should be either integers or a factor.}

\item{inner}{inner and trim together define the ψ-function for the M-statistic. The default values yield a version of Huber's ψ-function, while setting inner = 0 and trim = Inf uses the mean within each matched set. The ψ-function is an odd function, so ψ(w) = -ψ(-w). For w ≥ 0, the ψ-function is ψ(w)=0 for 0 ≤ w ≤ inner, is ψ(w)= trim for w ≥ trim, and rises linearly from 0 to trim for inner < w < trim.
An error will result unless 0 ≤ inner ≤ trim.
Taking trim < Inf limits the influence of outliers; see Huber (1981). Taking trim < Inf and inner = 0 uses Huber's psi function. Taking trim = Inf does no trimming and is similar to a weighted mean; see TonT. Taking inner > 0 often increases design sensitivity; see Rosenbaum (2013).}

\item{trim}{inner and trim together define the ψ-function for the M-statistic. See inner.}

\item{thres}{the significance level for the test}

\item{Ks}{the sequence of k that need to generate Gamma_{[k]}, the sequence needs to be in decreasing order}

\item{tol}{the desired accuracy (convergence tolerance).}
}
\value{
A list of the lower confidence limits for the biases at rank k for the k's provided in the parameter Ks
}
\description{
This function calculates lower confidence limits for the biases at rank k's(for a sequence of k's as needed in decreasing order) across all matched sets.
}
\examples{
I <- 500
mset <- as.vector(rbind(1:I,1:I))
z <- as.vector(rbind(rep(1,I),rep(0,I)))
y <- rnorm(1000,sd=sqrt(0.5))+0.5*z
Gamma_seq(y,z,mset,Ks=500:450,thres=0.05)

}
